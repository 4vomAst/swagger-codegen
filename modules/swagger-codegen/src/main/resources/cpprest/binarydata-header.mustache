{{>licenseInfo}}
/*
 * BinaryData.h
 *
 * This is the implementation of a JSON object.
 */

#ifndef {{modelHeaderGuardPrefix}}_BinaryData_H_
#define {{modelHeaderGuardPrefix}}_BinaryData_H_

{{{defaultInclude}}}
#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <cpprest/json.h>
#include <vector>

{{#modelNamespaceDeclarations}}
namespace {{this}} {
{{/modelNamespaceDeclarations}}

class {{declspec}} BinaryData : public ModelBase
{
public:
    BinaryData();
    virtual ~BinaryData();

    /////////////////////////////////////////////
    /// ModelBase overrides
    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

private:
    utility::string_t m_binaryData;
};

{{#modelNamespaceDeclarations}}
}
{{/modelNamespaceDeclarations}}

#endif /* {{modelHeaderGuardPrefix}}_BinaryData_H_ */
